{
  "version": 3,
  "sources": ["external-global:Serenity.Extensions", "../../../../../Modules/MovieDB/MovieCast/MovieCastPage.tsx", "../../../../../Modules/MovieDB/MovieCast/MovieCastEditor.tsx", "../../../../../Modules/ServerTypes/MovieDB/MovieCastColumns.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieCastForm.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieCastRow.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieCastService.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieGenresRow.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieGenresService.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "import { gridPageInit } from '@serenity-is/corelib';\r\n//import { MovieCastEditor } from './MovieCastEditor';\nimport { MovieCastEditDialog } from './MovieCastEditor';\r\n\r\nexport default () => gridPageInit(MovieCastEditDialog);", "import { Decorators, WidgetProps } from '@serenity-is/corelib';\r\nimport { MovieCastColumns, MovieCastForm, MovieCastRow } from '../../ServerTypes/MovieDB';\r\nimport { GridEditorBase, GridEditorDialog } from '@serenity-is/extensions';\r\n\r\n@Decorators.registerClass('MovieSerenity.MovieDB.MovieCastEditor')\nexport class MovieCastEditDialog extends GridEditorDialog<MovieCastRow> {\r\n    protected getFormKey() { return MovieCastForm.formKey; }\r\n    protected getNameProperty() { return MovieCastRow.nameProperty; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n\r\n    protected form: MovieCastForm = new MovieCastForm(this.idPrefix);\n    protected getDialogType() { return MovieCastEditDialog; }\r\n\r\n    protected getAddButtonCaption() {\r\n        return \"Add\";\r\n    }\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { MovieCastRow } from \"./MovieCastRow\";\n\nexport interface MovieCastColumns {\n    MovieCastId: Column<MovieCastRow>;\n    MovieTitle: Column<MovieCastRow>;\n    PersonFullName: Column<MovieCastRow>;\n    Character: Column<MovieCastRow>;\n}\n\nexport class MovieCastColumns extends ColumnsBase<MovieCastRow> {\n    static readonly columnsKey = 'MovieDB.MovieCast';\n    static readonly Fields = fieldsProxy<MovieCastColumns>();\n}", "\uFEFFimport { ServiceLookupEditor, LookupEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface MovieCastForm {\n    MovieId: ServiceLookupEditor;\n    PersonId: LookupEditor;\n    Character: StringEditor;\n}\n\nexport class MovieCastForm extends PrefixedContext {\n    static readonly formKey = 'MovieDB.MovieCast';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MovieCastForm.init)  {\n            MovieCastForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = LookupEditor;\n            var w2 = StringEditor;\n\n            initFormType(MovieCastForm, [\n                'MovieId', w0,\n                'PersonId', w1,\n                'Character', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface MovieCastRow {\n    MovieCastId?: number;\n    MovieId?: number;\n    PersonId?: number;\n    Character?: string;\n    MovieTitle?: string;\n    PersonFullName?: string;\n}\n\nexport abstract class MovieCastRow {\n    static readonly idProperty = 'MovieCastId';\n    static readonly nameProperty = 'Character';\n    static readonly localTextPrefix = 'MovieDB.MovieCast';\n    static readonly deletePermission = 'Adminstration:General';\n    static readonly insertPermission = 'Adminstration:General';\n    static readonly readPermission = 'Adminstration:General';\n    static readonly updatePermission = 'Adminstration:General';\n\n    static readonly Fields = fieldsProxy<MovieCastRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MovieCastRow } from \"./MovieCastRow\";\n\nexport namespace MovieCastService {\n    export const baseUrl = 'MovieDB/MovieCast';\n\n    export declare function Create(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<MovieCastRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<MovieCastRow>>;\n\n    export const Methods = {\n        Create: \"MovieDB/MovieCast/Create\",\n        Update: \"MovieDB/MovieCast/Update\",\n        Delete: \"MovieDB/MovieCast/Delete\",\n        Retrieve: \"MovieDB/MovieCast/Retrieve\",\n        List: \"MovieDB/MovieCast/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieCastService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface MovieGenresRow {\n    MovieGenreId?: number;\n    MovieId?: number;\n    GenreId?: number;\n    MovieTitle?: string;\n    GenreName?: string;\n}\n\nexport abstract class MovieGenresRow {\n    static readonly idProperty = 'MovieGenreId';\n    static readonly localTextPrefix = 'MovieDB.MovieGenres';\n    static readonly deletePermission = 'Adminstration:General';\n    static readonly insertPermission = 'Adminstration:General';\n    static readonly readPermission = 'Adminstration:General';\n    static readonly updatePermission = 'Adminstration:General';\n\n    static readonly Fields = fieldsProxy<MovieGenresRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MovieGenresRow } from \"./MovieGenresRow\";\n\nexport namespace MovieGenresService {\n    export const baseUrl = 'MovieDB/MovieGenres';\n\n    export declare function Create(request: SaveRequest<MovieGenresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<MovieGenresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieGenresRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<MovieGenresRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieGenresRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<MovieGenresRow>>;\n\n    export const Methods = {\n        Create: \"MovieDB/MovieGenres/Create\",\n        Update: \"MovieDB/MovieGenres/Update\",\n        Delete: \"MovieDB/MovieGenres/Delete\",\n        Retrieve: \"MovieDB/MovieGenres/Retrieve\",\n        List: \"MovieDB/MovieGenres/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieGenresService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}"],
  "mappings": "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",
  "names": ["require_Serenity", "__commonJSMin", "exports", "module", "import_corelib", "import_corelib", "import_corelib", "_MovieCastColumns", "__name", "MovieCastColumns", "import_corelib", "_MovieCastForm", "prefix", "w0", "w1", "w2", "__name", "MovieCastForm", "import_corelib", "_MovieCastRow", "__name", "MovieCastRow", "import_corelib", "MovieCastService", "x", "r", "s", "o", "import_corelib", "_MovieGenresRow", "__name", "MovieGenresRow", "import_corelib", "MovieGenresService", "x", "r", "s", "o", "import_extensions", "_MovieCastEditDialog_decorators", "_init", "_a", "_MovieCastEditDialog", "MovieCastForm", "MovieCastRow", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "MovieCastEditDialog", "MovieCastPage_default", "__name", "MovieCastEditDialog"]
}
