{
  "version": 3,
  "sources": ["../../../../../Modules/MovieDB/Person/PersonPage.tsx", "../../../../../Modules/MovieDB/Person/PersonGrid.tsx", "../../../../../Modules/MovieDB/Person/PersonDialog.tsx", "../../../../../Modules/ServerTypes/MovieDB/PersonRow.ts", "../../../../../Modules/ServerTypes/MovieDB/PersonForm.ts", "../../../../../Modules/ServerTypes/MovieDB/PersonService.ts", "../../../../../Modules/ServerTypes/MovieDB/PersonColumns.ts"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { PersonGrid } from './PersonGrid';\r\n\r\nexport default () => gridPageInit(PersonGrid);", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { PersonDialog } from './PersonDialog';\r\nimport { PersonService } from '../../ServerTypes/MovieDB/PersonService';\r\nimport { PersonColumns } from '../../ServerTypes/MovieDB/PersonColumns';\r\nimport { PersonRow } from '../../ServerTypes/MovieDB/PersonRow';\r\n\r\n@Decorators.registerClass('MovieSerenity.MovieDb.PersonGrid')\nexport class PersonGrid extends EntityGrid<PersonRow> {\n    protected getColumnsKey() { return PersonColumns.columnsKey; }\n    protected getDialogType() { return PersonDialog; }\n    protected getRowDefinition() { return PersonRow; }\n    protected getService() { return PersonService.baseUrl; }\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { PersonRow } from '../../ServerTypes/MovieDB/PersonRow';\r\nimport { PersonForm } from '../../ServerTypes/MovieDB/PersonForm';\r\nimport { PersonService } from '../../ServerTypes/MovieDB/PersonService';\r\n\r\n@Decorators.registerClass('MovieSerenity.MovieDb.PersonDialog')\nexport class PersonDialog extends EntityDialog<PersonRow, any> {\n    protected getFormKey() { return PersonForm.formKey; }\n    protected getRowDefinition() { return PersonRow; }\n    protected getService() { return PersonService.baseUrl; }\n    protected gerRowDefinition() { return PersonRow; }\n    protected form = new PersonForm(this.idPrefix);\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Gender } from \"../Modules/MovieDB.Person.Gender\";\n\nexport interface PersonRow {\n    PersonId?: number;\n    FirstName?: string;\n    LastName?: string;\n    BirthDate?: string;\n    BirthPlace?: string;\n    Height?: number;\n    Gender?: Gender;\n    FullName?: string;\n}\n\nexport abstract class PersonRow {\n    static readonly idProperty = 'PersonId';\n    static readonly nameProperty = 'FullName';\n    static readonly localTextPrefix = 'MovieDb.Person';\n    static readonly lookupKey = 'MovieDb.Person';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<PersonRow>('MovieDb.Person') }\n    static async getLookupAsync() { return getLookupAsync<PersonRow>('MovieDb.Person') }\n\n    static readonly deletePermission = 'Adminstration:General';\n    static readonly insertPermission = 'Adminstration:General';\n    static readonly readPermission = 'Adminstration:General';\n    static readonly updatePermission = 'Adminstration:General';\n\n    static readonly Fields = fieldsProxy<PersonRow>();\n}", "\uFEFFimport { StringEditor, DateEditor, EnumEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { Gender } from \"../Modules/MovieDB.Person.Gender\";\n\nexport interface PersonForm {\n    FirstName: StringEditor;\n    LastName: StringEditor;\n    BirthDate: DateEditor;\n    BirthPlace: StringEditor;\n    Gender: EnumEditor;\n    Height: IntegerEditor;\n}\n\nexport class PersonForm extends PrefixedContext {\n    static readonly formKey = 'MovieDb.Person';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!PersonForm.init)  {\n            PersonForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DateEditor;\n            var w2 = EnumEditor;\n            var w3 = IntegerEditor;\n\n            initFormType(PersonForm, [\n                'FirstName', w0,\n                'LastName', w0,\n                'BirthDate', w1,\n                'BirthPlace', w0,\n                'Gender', w2,\n                'Height', w3\n            ]);\n        }\n    }\n}\n\n[Gender]; // referenced types", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { PersonRow } from \"./PersonRow\";\n\nexport namespace PersonService {\n    export const baseUrl = 'MovieDb/Person';\n\n    export declare function Create(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<PersonRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<PersonRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<PersonRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<PersonRow>>;\n\n    export const Methods = {\n        Create: \"MovieDb/Person/Create\",\n        Update: \"MovieDb/Person/Update\",\n        Delete: \"MovieDb/Person/Delete\",\n        Retrieve: \"MovieDb/Person/Retrieve\",\n        List: \"MovieDb/Person/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>PersonService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { Gender } from \"../Modules/MovieDB.Person.Gender\";\nimport { PersonRow } from \"./PersonRow\";\n\nexport interface PersonColumns {\n    PersonId: Column<PersonRow>;\n    FirstName: Column<PersonRow>;\n    LastName: Column<PersonRow>;\n    BirthDate: Column<PersonRow>;\n    BirthPlace: Column<PersonRow>;\n    Gender: Column<PersonRow>;\n    Height: Column<PersonRow>;\n}\n\nexport class PersonColumns extends ColumnsBase<PersonRow> {\n    static readonly columnsKey = 'MovieDb.Person';\n    static readonly Fields = fieldsProxy<PersonColumns>();\n}\n\n[Gender]; // referenced types"],
  "mappings": "qIAAC,IAAAA,EAA6B,SCA9B,IAAAC,EAAuC,SCAvC,IAAAC,EAAyC,SCAxC,IAAAC,EAAuD,SAcjD,IAAeC,EAAf,MAAeA,CAAU,CAO5B,OAAO,WAAY,CAAE,SAAO,aAAqB,gBAAgB,CAAE,CACnE,aAAa,gBAAiB,CAAE,SAAO,kBAA0B,gBAAgB,CAAE,CAQvF,EAhBgCC,EAAAD,EAAA,aAAVA,EACF,WAAa,WADXA,EAEF,aAAe,WAFbA,EAGF,gBAAkB,iBAHhBA,EAIF,UAAY,iBAJVA,EAUF,iBAAmB,wBAVjBA,EAWF,iBAAmB,wBAXjBA,EAYF,eAAiB,wBAZfA,EAaF,iBAAmB,wBAbjBA,EAeF,UAAS,eAAuB,EAf7C,IAAeE,EAAfF,ECdN,IAAAG,EAAmG,SAY7F,IAAMC,EAAN,MAAMA,UAAmB,iBAAgB,CAI5C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAW,KAAO,CACnBA,EAAW,KAAO,GAElB,IAAIE,EAAK,eACLC,EAAK,aACLC,EAAK,aACLC,EAAK,mBAET,gBAAaL,EAAY,CACrB,YAAaE,EACb,WAAYA,EACZ,YAAaC,EACb,aAAcD,EACd,SAAUE,EACV,SAAUC,CACd,CAAC,CACL,CACJ,CACJ,EAzBgDC,EAAAN,EAAA,cAAnCA,EACO,QAAU,iBADvB,IAAMO,EAANP,ECZN,IAAAQ,EAAuK,SAGvJC,OACAA,EAAA,QAAU,iBAQVA,EAAA,QAAU,CACnB,OAAQ,wBACR,OAAQ,wBACR,OAAQ,wBACR,SAAU,0BACV,KAAM,qBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAeC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACzC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KHHjB,IAAAK,EAAAC,EAAAC,EAKAF,EAAA,CAAC,aAAW,cAAc,oCAAoC,GACvD,IAAMG,EAAN,MAAMA,UAAqBD,EAAA,eAA6B,CAAxD,kCAKH,KAAU,KAAO,IAAIE,EAAW,KAAK,QAAQ,EAJnC,YAAa,CAAE,OAAOA,EAAW,OAAS,CAC1C,kBAAmB,CAAE,OAAOC,CAAW,CACvC,YAAa,CAAE,OAAOC,EAAc,OAAS,CAC7C,kBAAmB,CAAE,OAAOD,CAAW,CAErD,EANOJ,EAAAM,EAAAL,GAAMC,EAANK,EAAAP,EAAA,iBADPD,EACaG,GAAkDM,EAAAN,EAAA,gBAAxDO,EAAAT,EAAA,EAAME,GAAN,IAAMQ,EAANR,EINN,IAAAS,EAAyC,SAenC,IAAMC,EAAN,MAAMA,UAAsB,aAAuB,CAG1D,EAH0DC,EAAAD,EAAA,iBAA7CA,EACO,WAAa,iBADpBA,EAEO,UAAS,eAA2B,EAFjD,IAAME,EAANF,ELfP,IAAAG,EAAAC,EAAAC,EAMAF,EAAA,CAAC,aAAW,cAAc,kCAAkC,GACrD,IAAMG,EAAN,MAAMA,UAAmBD,EAAA,aAAsB,CACxC,eAAgB,CAAE,OAAOE,EAAc,UAAY,CACnD,eAAgB,CAAE,OAAOC,CAAc,CACvC,kBAAmB,CAAE,OAAOC,CAAW,CACvC,YAAa,CAAE,OAAOC,EAAc,OAAS,CAC3D,EALON,EAAAO,EAAAN,GAAMC,EAANM,EAAAR,EAAA,eADPD,EACaG,GAAyCO,EAAAP,EAAA,cAA/CQ,EAAAV,EAAA,EAAME,GAAN,IAAMS,EAANT,EDJP,IAAOU,GAAQC,EAAA,OAAM,gBAAaC,CAAU,EAA7B",
  "names": ["import_corelib", "import_corelib", "import_corelib", "import_corelib", "_PersonRow", "__name", "PersonRow", "import_corelib", "_PersonForm", "prefix", "w0", "w1", "w2", "w3", "__name", "PersonForm", "import_corelib", "PersonService", "x", "r", "s", "o", "_PersonDialog_decorators", "_init", "_a", "_PersonDialog", "PersonForm", "PersonRow", "PersonService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "PersonDialog", "import_corelib", "_PersonColumns", "__name", "PersonColumns", "_PersonGrid_decorators", "_init", "_a", "_PersonGrid", "PersonColumns", "PersonDialog", "PersonRow", "PersonService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "PersonGrid", "PersonPage_default", "__name", "PersonGrid"]
}
