{
  "version": 3,
  "sources": ["../../../../../Modules/MovieDB/Person/PersonPage.tsx", "../../../../../Modules/MovieDB/Person/PersonGrid.tsx", "../../../../../Modules/MovieDB/Person/PersonDialog.tsx", "../../../../../Modules/ServerTypes/MovieDB/PersonForm.ts", "../../../../../Modules/MovieDB/Person/PersonMovieGrid.tsx", "../../../../../Modules/ServerTypes/MovieDB/PersonService.ts", "../../../../../Modules/ServerTypes/MovieDB/PersonColumns.ts"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { PersonGrid } from './PersonGrid';\r\n\r\nexport default () => gridPageInit(PersonGrid);", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { PersonDialog } from './PersonDialog';\r\nimport { PersonService } from '../../ServerTypes/MovieDB/PersonService';\r\nimport { PersonColumns } from '../../ServerTypes/MovieDB/PersonColumns';\r\nimport { PersonRow } from '../../ServerTypes/MovieDB/PersonRow';\r\n\r\n@Decorators.registerClass('MovieSerenity.MovieDb.PersonGrid')\r\nexport class PersonGrid extends EntityGrid<PersonRow> {\r\n    protected getColumnsKey() { return PersonColumns.columnsKey; }\r\n    protected getDialogType() { return PersonDialog; }\r\n    protected getRowDefinition() { return PersonRow; }\r\n    protected getService() { return PersonService.baseUrl; }\r\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { PersonRow } from '../../ServerTypes/MovieDB/PersonRow';\r\nimport { PersonForm } from '../../ServerTypes/MovieDB/PersonForm';\r\nimport { PersonService } from '../../ServerTypes/MovieDB/PersonService';\r\nimport \"./PersonDialog.css\";\r\n@Decorators.registerClass('MovieSerenity.MovieDb.PersonDialog')\r\nexport class PersonDialog extends EntityDialog<PersonRow, any> {\r\n    protected getFormKey() { return PersonForm.formKey; }\r\n    protected getRowDefinition() { return PersonRow; }\r\n    protected getService() { return PersonService.baseUrl; }\r\n    protected gerRowDefinition() { return PersonRow; }\r\n    protected form = new PersonForm(this.idPrefix);\n\n    protected afterLoadEntity() {\r\n        super.afterLoadEntity();\r\n\r\n        this.form.MoviesGrid.personId = this.entityId;\r\n    }\r\n}", "\uFEFFimport { StringEditor, DateEditor, EnumEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { PersonMovieGrid } from \"../../MovieDB/Person/PersonMovieGrid\";\nimport { Gender } from \"../Modules/MovieDB.Person.Gender\";\n\nexport interface PersonForm {\n    FirstName: StringEditor;\n    LastName: StringEditor;\n    BirthDate: DateEditor;\n    BirthPlace: StringEditor;\n    Gender: EnumEditor;\n    Height: IntegerEditor;\n    MoviesGrid: PersonMovieGrid;\n}\n\nexport class PersonForm extends PrefixedContext {\n    static readonly formKey = 'MovieDb.Person';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!PersonForm.init)  {\n            PersonForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DateEditor;\n            var w2 = EnumEditor;\n            var w3 = IntegerEditor;\n            var w4 = PersonMovieGrid;\n\n            initFormType(PersonForm, [\n                'FirstName', w0,\n                'LastName', w0,\n                'BirthDate', w1,\n                'BirthPlace', w0,\n                'Gender', w2,\n                'Height', w3,\n                'MoviesGrid', w4\n            ]);\n        }\n    }\n}\n\n[Gender]; // referenced types", "import { Decorators, EntityGrid, WidgetProps } from \"@serenity-is/corelib\";\r\nimport { MovieCastRow, MovieCastService } from \"../../ServerTypes/MovieDB\";\r\nimport { PersonMovieColumns } from \"../../ServerTypes/Modules/MovieDB.Person.PersonMovieColumns\";\r\n\r\n@Decorators.registerEditor(\"MovieTutorial.MovieDB.PersonMovieGrid\")\r\nexport class PersonMovieGrid<P = {}> extends EntityGrid<MovieCastRow, P> {\r\n    protected getColumnsKey() { return PersonMovieColumns.columnsKey; }\r\n    protected getRowDefinition() { return MovieCastRow; }\r\n    protected getService() { return MovieCastService.baseUrl; }\r\n\r\n    constructor(props: WidgetProps<P>) {\r\n        super(props);\r\n    }\n    protected getButtons() {\r\n        return null;\r\n    }\r\n\r\n    protected getInitialTitle() {\r\n        return null;\r\n    }\r\n\r\n    protected usePager() {\r\n        return false;\r\n    }\r\n\r\n    protected getGridCanLoad() {\r\n        return this.personId != null;\r\n    }\r\n\r\n    private _personId: number;\r\n\r\n    get personId() {\r\n        return this._personId;\r\n    }\r\n\r\n    set personId(value: number) {\r\n        if (this._personId != value) {\r\n            this._personId = value;\r\n            this.setEquality(MovieCastRow.Fields.PersonId, value);\r\n            this.refresh();\r\n        }\r\n    }\r\n}\n\n", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { PersonRow } from \"./PersonRow\";\r\n\r\nexport namespace PersonService {\r\n    export const baseUrl = 'MovieDb/Person';\r\n\r\n    export declare function Create(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Update(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<PersonRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<PersonRow>>;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<PersonRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<PersonRow>>;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDb/Person/Create\",\r\n        Update: \"MovieDb/Person/Update\",\r\n        Delete: \"MovieDb/Person/Delete\",\r\n        Retrieve: \"MovieDb/Person/Retrieve\",\r\n        List: \"MovieDb/Person/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>PersonService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { Gender } from \"../Modules/MovieDB.Person.Gender\";\r\nimport { PersonRow } from \"./PersonRow\";\r\n\r\nexport interface PersonColumns {\r\n    PersonId: Column<PersonRow>;\r\n    FirstName: Column<PersonRow>;\r\n    LastName: Column<PersonRow>;\r\n    BirthDate: Column<PersonRow>;\r\n    BirthPlace: Column<PersonRow>;\r\n    Gender: Column<PersonRow>;\r\n    Height: Column<PersonRow>;\r\n}\r\n\r\nexport class PersonColumns extends ColumnsBase<PersonRow> {\r\n    static readonly columnsKey = 'MovieDb.Person';\r\n    static readonly Fields = fieldsProxy<PersonColumns>();\r\n}\r\n\r\n[Gender]; // referenced types"],
  "mappings": "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",
  "names": ["import_corelib", "import_corelib", "import_corelib", "import_corelib", "import_corelib", "_PersonMovieGrid_decorators", "_init", "_a", "_PersonMovieGrid", "PersonMovieColumns", "MovieCastRow", "MovieCastService", "props", "value", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "PersonMovieGrid", "_PersonForm", "prefix", "w0", "w1", "w2", "w3", "w4", "PersonMovieGrid", "__name", "PersonForm", "import_corelib", "PersonService", "x", "r", "s", "o", "_PersonDialog_decorators", "_init", "_a", "_PersonDialog", "PersonForm", "PersonRow", "PersonService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "PersonDialog", "import_corelib", "_PersonColumns", "__name", "PersonColumns", "_PersonGrid_decorators", "_init", "_a", "_PersonGrid", "PersonColumns", "PersonDialog", "PersonRow", "PersonService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "PersonGrid", "PersonPage_default", "__name", "PersonGrid"]
}
