{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Modules/Administration.Genre.Genre.GenreColumns.ts", "../../../Modules/ServerTypes/Modules/Administration.Genre.Genre.GenreRow.ts", "../../../Modules/ServerTypes/Modules/Administration.Genre.Genre.GenreService.ts", "../../../Modules/ServerTypes/Modules/Administration.Genre.Genre.GenreForm.ts", "../../../Modules/ServerTypes/Modules/MovieDB.Movie.MovieKind.ts", "../../../Modules/ServerTypes/Modules/MovieDB.Person.Gender.ts", "../../../Modules/ServerTypes/Modules/MovieDB.Person.PersonMovieColumns.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { GenreRow } from \"./Administration.Genre.Genre.GenreRow\";\r\n\r\nexport interface GenreColumns {\r\n    GenreId: Column<GenreRow>;\r\n    Name: Column<GenreRow>;\r\n}\r\n\r\nexport class GenreColumns extends ColumnsBase<GenreRow> {\r\n    static readonly columnsKey = 'Adminstration.Genre';\r\n    static readonly Fields = fieldsProxy<GenreColumns>();\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface GenreRow {\r\n    GenreId?: number;\r\n    Name?: string;\r\n}\r\n\r\nexport abstract class GenreRow {\r\n    static readonly idProperty = 'GenreId';\r\n    static readonly nameProperty = 'Name';\r\n    static readonly localTextPrefix = 'Adminstration.Genre';\r\n    static readonly lookupKey = 'MovieDB.Genre';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<GenreRow>('MovieDB.Genre') }\r\n    static async getLookupAsync() { return getLookupAsync<GenreRow>('MovieDB.Genre') }\r\n\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<GenreRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { GenreRow } from \"./Administration.Genre.Genre.GenreRow\";\r\n\r\nexport namespace GenreService {\r\n    export const baseUrl = 'Adminstraion/Genre';\r\n\r\n    export declare function Create(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Update(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GenreRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<GenreRow>>;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GenreRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<GenreRow>>;\r\n\r\n    export const Methods = {\r\n        Create: \"Adminstraion/Genre/Create\",\r\n        Update: \"Adminstraion/Genre/Update\",\r\n        Delete: \"Adminstraion/Genre/Delete\",\r\n        Retrieve: \"Adminstraion/Genre/Retrieve\",\r\n        List: \"Adminstraion/Genre/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>GenreService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface GenreForm {\r\n    Name: StringEditor;\r\n}\r\n\r\nexport class GenreForm extends PrefixedContext {\r\n    static readonly formKey = 'Adminstration.Genre';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!GenreForm.init)  {\r\n            GenreForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(GenreForm, [\r\n                'Name', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\n\r\nexport enum MovieKind {\r\n    Film = 1,\r\n    TvSeries = 2,\r\n    MiniSeries = 3\r\n}\r\nDecorators.registerEnumType(MovieKind, 'MovieSerenity.Modules.MovieDB.Movie.MovieKind', 'MovieDB.MovieKind');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\n\r\nexport enum Gender {\r\n    Male = 1,\r\n    Female = 2\r\n}\r\nDecorators.registerEnumType(Gender, 'MovieSerenity.Modules.MovieDB.Person.Gender');", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { MovieCastRow } from \"../MovieDB/MovieCastRow\";\n\nexport interface PersonMovieColumns {\n    MovieTitle: Column<MovieCastRow>;\n    Character: Column<MovieCastRow>;\n}\n\nexport class PersonMovieColumns extends ColumnsBase<MovieCastRow> {\n    static readonly columnsKey = 'MovieSerenity.Modules.MovieDB.Person.PersonMovieColumns';\n    static readonly Fields = fieldsProxy<PersonMovieColumns>();\n}"],
  "mappings": "sDAAC,IAAAA,EAAyC,SASnC,IAAMC,EAAN,MAAMA,UAAqB,aAAsB,CAGxD,EAHwDC,EAAAD,EAAA,gBAA3CA,EACO,WAAa,sBADpBA,EAEO,UAAS,eAA0B,EAFhD,IAAME,EAANF,ECTN,IAAAG,EAAuD,SAOjD,IAAeC,EAAf,MAAeA,CAAS,CAO3B,OAAO,WAAY,CAAE,SAAO,aAAoB,eAAe,CAAE,CACjE,aAAa,gBAAiB,CAAE,SAAO,kBAAyB,eAAe,CAAE,CAQrF,EAhB+BC,EAAAD,EAAA,YAATA,EACF,WAAa,UADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,sBAHhBA,EAIF,UAAY,gBAJVA,EAUF,iBAAmB,yBAVjBA,EAWF,iBAAmB,yBAXjBA,EAYF,eAAiB,yBAZfA,EAaF,iBAAmB,yBAbjBA,EAeF,UAAS,eAAsB,EAf5C,IAAeE,EAAfF,ECPN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,qBAQVA,EAAA,QAAU,CACnB,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,SAAU,8BACV,KAAM,yBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA4D,SAMtD,IAAMC,EAAN,MAAMA,UAAkB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,kBAET,gBAAaF,EAAW,CACpB,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjB+CC,EAAAH,EAAA,aAAlCA,EACO,QAAU,sBADvB,IAAMI,EAANJ,ECNN,IAAAK,EAA2B,SAEhBC,OACRA,IAAA,KAAO,GAAP,OACAA,IAAA,SAAW,GAAX,WACAA,IAAA,WAAa,GAAb,aAHQA,OAAA,IAKZ,aAAW,iBAAiBA,EAAW,gDAAiD,mBAAmB,ECP1G,IAAAC,EAA2B,SAEhBC,OACRA,IAAA,KAAO,GAAP,OACAA,IAAA,OAAS,GAAT,SAFQA,OAAA,IAIZ,aAAW,iBAAiBA,EAAQ,6CAA6C,ECNhF,IAAAC,EAAyC,SASnC,IAAMC,EAAN,MAAMA,UAA2B,aAA0B,CAGlE,EAHkEC,EAAAD,EAAA,sBAArDA,EACO,WAAa,0DADpBA,EAEO,UAAS,eAAgC,EAFtD,IAAME,EAANF",
  "names": ["import_corelib", "_GenreColumns", "__name", "GenreColumns", "import_corelib", "_GenreRow", "__name", "GenreRow", "import_corelib", "GenreService", "x", "r", "s", "o", "import_corelib", "_GenreForm", "prefix", "w0", "__name", "GenreForm", "import_corelib", "MovieKind", "import_corelib", "Gender", "import_corelib", "_PersonMovieColumns", "__name", "PersonMovieColumns"]
}
